//
//  PostCardController.h
//  Ytel
//
//  This file was automatically generated for ytel by APIMATIC v2.0 ( https://apimatic.io )
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "ViewPostcardInput.h"
#import "CreatePostcardInput.h"
#import "ListPostcardsInput.h"
#import "DeletePostcardInput.h"

@interface PostCardController : BaseController

/**
* Completion block definition for asynchronous call to View Postcard */
typedef void (^CompletedPostViewPostcard)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve a postcard object by its PostcardId.
* @param  ViewPostcardInput     Object with all parameters
*/
- (void) viewPostcardAsyncWithViewPostcardInput:(ViewPostcardInput*) input
                completionBlock:(CompletedPostViewPostcard) onCompleted;

/**
* Completion block definition for asynchronous call to Create Postcard */
typedef void (^CompletedPostCreatePostcard)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Create, print, and mail a postcard to an address. The postcard front must be supplied as a PDF, image, or an HTML string. The back can be a PDF, image, HTML string, or it can be automatically generated by supplying a custom message.
* @param  CreatePostcardInput     Object with all parameters
*/
- (void) createPostcardAsyncWithCreatePostcardInput:(CreatePostcardInput*) input
                completionBlock:(CompletedPostCreatePostcard) onCompleted;

/**
* Completion block definition for asynchronous call to List Postcards */
typedef void (^CompletedPostListPostcards)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve a list of postcard objects. The postcards objects are sorted by creation date, with the most recently created postcards appearing first.
* @param  ListPostcardsInput     Object with all parameters
*/
- (void) listPostcardsAsyncWithListPostcardsInput:(ListPostcardsInput*) input
                completionBlock:(CompletedPostListPostcards) onCompleted;

/**
* Completion block definition for asynchronous call to Delete Postcard */
typedef void (^CompletedPostDeletePostcard)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Remove a postcard object.
* @param  DeletePostcardInput     Object with all parameters
*/
- (void) deletePostcardAsyncWithDeletePostcardInput:(DeletePostcardInput*) input
                completionBlock:(CompletedPostDeletePostcard) onCompleted;

@end