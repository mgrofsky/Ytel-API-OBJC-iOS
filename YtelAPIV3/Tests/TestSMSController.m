//
//  YtelAPIV3
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <XCTest/XCTest.h>
#import "SMSController.h"
#import "TestHelper.h"
#import "TestBaseController.h"

@interface  TestSMSController : TestBaseController
//Controller instance for all tests
@property SMSController* controller;
@end 


@implementation  TestSMSController : TestBaseController

//Setup test class
//This method is called before the invocation of each test method in the test class
- (void)setUp {
    [super setUp];
    self.controller = [[SMSController alloc]init];
}

//Teardown test class
//This method is called after the invocation of each test method in the test class
- (void)tearDown {
    [super tearDown];
}	


// Retrieve a list of Outbound SMS message objects.    
-(void) testTestListSMS {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSNumber* page = nil;
    NSNumber* pageSize = nil;
    NSString* from = nil;
    NSString* to = nil;
    NSString* dateSent = nil;

    // Set callback and perform API call
    [self.controller createListSMSAsyncWithPage: page pageSize : pageSize from : from to : to dateSent : dateSent  completionBlock:^(BOOL success, HttpContext* context, NSString* response, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}

// Retrieve a list of Inbound SMS message objects.    
-(void) testTestListInboundSMS {
    //Set up test expectations
    XCTestExpectation *expectation =[self expectationWithDescription:@"High Expectations"];
    // Parameters for the API call
    NSNumber* page = nil;
    NSNumber* pageSize = nil;
    NSString* from = nil;
    NSString* to = nil;
    NSString* dateSent = nil;

    // Set callback and perform API call
    [self.controller createListInboundSMSAsyncWithPage: page pageSize : pageSize from : from to : to dateSent : dateSent  completionBlock:^(BOOL success, HttpContext* context, NSString* response, NSError* error) { 
       // Test response code
        XCTAssertEqual(200, context.response.statusCode);
        

        [expectation fulfill];
    }];
    [self wait];
}



@end
