//
//  YtelAPIV3
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#include "Direction4EnumHelper.h"

/**
* Helper class implementation for Direction4Enum to NSString conversion
*/
@implementation Direction4EnumHelper

+(id) stringFromDirection4Enum:(enum Direction4Enum) direction4Enum withDefault: (id) defaultValue
{
    switch(direction4Enum)
    {
        case Direction4In:
            return @"in";

        case Direction4Out:
            return @"out";

        case Direction4Both:
            return @"both";

        default:
            return defaultValue;
    }
}

+(NSArray<NSString*>*) stringArrayFromDirection4EnumArray:(NSArray<NSNumber*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSNumber* numberValue in array){
        NSNumber* stringValue = [Direction4EnumHelper stringFromDirection4Enum:(enum Direction4Enum) numberValue.intValue withDefault:[NSNull null]];
        [enums addObject:stringValue];
    }
    return [enums copy];
}

+(enum Direction4Enum) direction4EnumFromString:(NSString*) strValue
{
    NSArray* Direction4EnumArray = [NSArray arrayWithObjects:
                                        @"in",
                                        @"out",
                                        @"both",
                                        nil];

    return (enum Direction4Enum) [Direction4EnumArray indexOfObject: strValue];
}


+(NSArray<NSNumber*>*) direction4EnumArrayFromStringArray:(NSArray<NSString*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSString* enumValue in array){
        NSNumber* numberValue = [NSNumber numberWithInt:[ Direction4EnumHelper direction4EnumFromString:enumValue]];
        [enums addObject:numberValue];
    }
    return [enums copy];
}

@end