//
//  YtelAPIV3
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#include "IfMachine32EnumHelper.h"

/**
* Helper class implementation for IfMachine32Enum to NSString conversion
*/
@implementation IfMachine32EnumHelper

+(id) stringFromIfMachine32Enum:(enum IfMachine32Enum) ifMachine32Enum withDefault: (id) defaultValue
{
    switch(ifMachine32Enum)
    {
        case IfMachine32CONTINUE:
            return @"continue";

        case IfMachine32HANGUP:
            return @"hangup";

        default:
            return defaultValue;
    }
}

+(NSArray<NSString*>*) stringArrayFromIfMachine32EnumArray:(NSArray<NSNumber*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSNumber* numberValue in array){
        NSNumber* stringValue = [IfMachine32EnumHelper stringFromIfMachine32Enum:(enum IfMachine32Enum) numberValue.intValue withDefault:[NSNull null]];
        [enums addObject:stringValue];
    }
    return [enums copy];
}

+(enum IfMachine32Enum) ifMachine32EnumFromString:(NSString*) strValue
{
    NSArray* IfMachine32EnumArray = [NSArray arrayWithObjects:
                                        @"continue",
                                        @"hangup",
                                        nil];

    return (enum IfMachine32Enum) [IfMachine32EnumArray indexOfObject: strValue];
}


+(NSArray<NSNumber*>*) ifMachine32EnumArrayFromStringArray:(NSArray<NSString*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSString* enumValue in array){
        NSNumber* numberValue = [NSNumber numberWithInt:[ IfMachine32EnumHelper ifMachine32EnumFromString:enumValue]];
        [enums addObject:numberValue];
    }
    return [enums copy];
}

@end