//
//  YtelAPIV3
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#include "NumbertypeEnumHelper.h"

/**
* Helper class implementation for NumbertypeEnum to NSString conversion
*/
@implementation NumbertypeEnumHelper

+(id) stringFromNumbertypeEnum:(enum NumbertypeEnum) numbertypeEnum withDefault: (id) defaultValue
{
    switch(numbertypeEnum)
    {
        case NumbertypeAll:
            return @"all";

        case NumbertypeVoice:
            return @"voice";

        case NumbertypeSms:
            return @"sms";

        default:
            return defaultValue;
    }
}

+(NSArray<NSString*>*) stringArrayFromNumbertypeEnumArray:(NSArray<NSNumber*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSNumber* numberValue in array){
        NSNumber* stringValue = [NumbertypeEnumHelper stringFromNumbertypeEnum:(enum NumbertypeEnum) numberValue.intValue withDefault:[NSNull null]];
        [enums addObject:stringValue];
    }
    return [enums copy];
}

+(enum NumbertypeEnum) numbertypeEnumFromString:(NSString*) strValue
{
    NSArray* NumbertypeEnumArray = [NSArray arrayWithObjects:
                                        @"all",
                                        @"voice",
                                        @"sms",
                                        nil];

    return (enum NumbertypeEnum) [NumbertypeEnumArray indexOfObject: strValue];
}


+(NSArray<NSNumber*>*) numbertypeEnumArrayFromStringArray:(NSArray<NSString*>*) array
{
    NSMutableArray* enums = [[NSMutableArray alloc]init]; 
    for(NSString* enumValue in array){
        NSNumber* numberValue = [NSNumber numberWithInt:[ NumbertypeEnumHelper numbertypeEnumFromString:enumValue]];
        [enums addObject:numberValue];
    }
    return [enums copy];
}

@end