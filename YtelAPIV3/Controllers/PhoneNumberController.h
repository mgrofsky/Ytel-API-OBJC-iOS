//
//  YtelAPIV3
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "NumbertypeEnum.h"
#import "NumbertypeEnumHelper.h"
#import "NumberType14Enum.h"
#import "NumberType14EnumHelper.h"
#import "NumberType15Enum.h"
#import "NumberType15EnumHelper.h"

@interface PhoneNumberController : BaseController

/**
* Completion block definition for asynchronous call to Get DID Score */
typedef void (^CompletedPostGetDIDScore)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Get DID Score Number
* @param    phonenumber    Required parameter: Specifies the multiple phone numbers for check updated spamscore .
*/
- (void) createGetDIDScoreAsyncWithPhonenumber:(NSString*) phonenumber
                completionBlock:(CompletedPostGetDIDScore) onCompleted;

/**
* Completion block definition for asynchronous call to Move Number */
typedef void (^CompletedPostMoveNumber)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Transfer phone number that has been purchased for from one account to another account.
* @param    phonenumber    Required parameter: A valid 10-digit Ytel number (E.164 format).
* @param    fromaccountsid    Required parameter: A specific Accountsid from where Number is getting transfer.
* @param    toaccountsid    Required parameter: A specific Accountsid to which Number is getting transfer.
*/
- (void) createMoveNumberAsyncWithPhonenumber:(NSString*) phonenumber
                fromaccountsid:(NSString*) fromaccountsid
                toaccountsid:(NSString*) toaccountsid
                completionBlock:(CompletedPostMoveNumber) onCompleted;

/**
* Completion block definition for asynchronous call to Purchase Number */
typedef void (^CompletedPostPurchaseNumber)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Purchase a phone number to be used with your Ytel account
* @param    phoneNumber    Required parameter: A valid 10-digit Ytel number (E.164 format).
*/
- (void) createPurchaseNumberAsyncWithPhoneNumber:(NSString*) phoneNumber
                completionBlock:(CompletedPostPurchaseNumber) onCompleted;

/**
* Completion block definition for asynchronous call to Release Number */
typedef void (^CompletedPostReleaseNumber)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Remove a purchased Ytel number from your account.
* @param    responseType    Required parameter: Response type format xml or json
* @param    phoneNumber    Required parameter: A valid 10-digit Ytel number (E.164 format).
*/
- (void) createReleaseNumberAsyncWithResponseType:(NSString*) responseType
                phoneNumber:(NSString*) phoneNumber
                completionBlock:(CompletedPostReleaseNumber) onCompleted;

/**
* Completion block definition for asynchronous call to View Details */
typedef void (^CompletedPostViewDetails)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve the details for a phone number by its number.
* @param    phoneNumber    Required parameter: A valid Ytel 10-digit phone number (E.164 format).
*/
- (void) createViewDetailsAsyncWithPhoneNumber:(NSString*) phoneNumber
                completionBlock:(CompletedPostViewDetails) onCompleted;

/**
* Completion block definition for asynchronous call to Bulk Release */
typedef void (^CompletedPostBulkRelease)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Remove a purchased Ytel number from your account.
* @param    phoneNumber    Required parameter: A valid Ytel comma separated numbers (E.164 format).
*/
- (void) createBulkReleaseAsyncWithPhoneNumber:(NSString*) phoneNumber
                completionBlock:(CompletedPostBulkRelease) onCompleted;

/**
* Completion block definition for asynchronous call to Available Numbers */
typedef void (^CompletedPostAvailableNumbers)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve a list of available phone numbers that can be purchased and used for your Ytel account.
* @param    numbertype    Required parameter: Number type either SMS,Voice or all
* @param    areacode    Required parameter: Specifies the area code for the returned list of available numbers. Only available for North American numbers.
* @param    pagesize    Optional parameter: The count of objects to return.
*/
- (void) createAvailableNumbersAsyncWithNumbertype:(enum NumbertypeEnum) numbertype
                areacode:(NSString*) areacode
                pagesize:(NSNumber*) pagesize
                completionBlock:(CompletedPostAvailableNumbers) onCompleted;

/**
* Completion block definition for asynchronous call to Update Number */
typedef void (^CompletedPostUpdateNumber)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Update properties for a Ytel number that has been purchased for your account. Refer to the parameters list for the list of properties that can be updated.
* @param    phoneNumber    Required parameter: A valid Ytel number (E.164 format).
* @param    voiceUrl    Required parameter: URL requested once the call connects
* @param    friendlyName    Optional parameter: Phone number friendly name description
* @param    voiceMethod    Optional parameter: Post or Get
* @param    voiceFallbackUrl    Optional parameter: URL requested if the voice URL is not available
* @param    voiceFallbackMethod    Optional parameter: Post or Get
* @param    hangupCallback    Optional parameter: callback url after a hangup occurs
* @param    hangupCallbackMethod    Optional parameter: Post or Get
* @param    heartbeatUrl    Optional parameter: URL requested once the call connects
* @param    heartbeatMethod    Optional parameter: URL that can be requested every 60 seconds during the call to notify of elapsed time
* @param    smsUrl    Optional parameter: URL requested when an SMS is received
* @param    smsMethod    Optional parameter: Post or Get
* @param    smsFallbackUrl    Optional parameter: URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
* @param    smsFallbackMethod    Optional parameter: The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
*/
- (void) updateNumberAsyncWithPhoneNumber:(NSString*) phoneNumber
                voiceUrl:(NSString*) voiceUrl
                friendlyName:(NSString*) friendlyName
                voiceMethod:(NSString*) voiceMethod
                voiceFallbackUrl:(NSString*) voiceFallbackUrl
                voiceFallbackMethod:(NSString*) voiceFallbackMethod
                hangupCallback:(NSString*) hangupCallback
                hangupCallbackMethod:(NSString*) hangupCallbackMethod
                heartbeatUrl:(NSString*) heartbeatUrl
                heartbeatMethod:(NSString*) heartbeatMethod
                smsUrl:(NSString*) smsUrl
                smsMethod:(NSString*) smsMethod
                smsFallbackUrl:(NSString*) smsFallbackUrl
                smsFallbackMethod:(NSString*) smsFallbackMethod
                completionBlock:(CompletedPostUpdateNumber) onCompleted;

/**
* Completion block definition for asynchronous call to List Numbers */
typedef void (^CompletedPostListNumbers)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve a list of purchased phones numbers associated with your Ytel account.
* @param    page    Optional parameter: Which page of the overall response will be returned. Page indexing starts at 1.
* @param    pageSize    Optional parameter: The page count to retrieve from the total results in the collection. Page indexing starts at 1.
* @param    numberType    Optional parameter: The capability supported by the number.Number type either SMS,Voice or all
* @param    friendlyName    Optional parameter: A human-readable label added to the number object.
*/
- (void) createListNumbersAsyncWithPage:(NSNumber*) page
                pageSize:(NSNumber*) pageSize
                numberType:(enum NumberType14Enum) numberType
                friendlyName:(NSString*) friendlyName
                completionBlock:(CompletedPostListNumbers) onCompleted;

/**
* Completion block definition for asynchronous call to Bulk Update Numbers */
typedef void (^CompletedPostBulkUpdateNumbers)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Update properties for a Ytel numbers that has been purchased for your account. Refer to the parameters list for the list of properties that can be updated.
* @param    phoneNumber    Required parameter: A valid comma(,) separated Ytel numbers. (E.164 format).
* @param    voiceUrl    Required parameter: The URL returning InboundXML incoming calls should execute when connected.
* @param    friendlyName    Optional parameter: A human-readable value for labeling the number.
* @param    voiceMethod    Optional parameter: Specifies the HTTP method used to request the VoiceUrl once incoming call connects.
* @param    voiceFallbackUrl    Optional parameter: URL used if any errors occur during execution of InboundXML on a call or at initial request of the voice url
* @param    voiceFallbackMethod    Optional parameter: Specifies the HTTP method used to request the VoiceFallbackUrl once incoming call connects.
* @param    hangupCallback    Optional parameter: URL that can be requested to receive notification when and how incoming call has ended.
* @param    hangupCallbackMethod    Optional parameter: The HTTP method Ytel will use when requesting the HangupCallback URL.
* @param    heartbeatUrl    Optional parameter: URL that can be used to monitor the phone number.
* @param    heartbeatMethod    Optional parameter: The HTTP method Ytel will use when requesting the HeartbeatUrl.
* @param    smsUrl    Optional parameter: URL requested when an SMS is received.
* @param    smsMethod    Optional parameter: The HTTP method Ytel will use when requesting the SmsUrl.
* @param    smsFallbackUrl    Optional parameter: URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
* @param    smsFallbackMethod    Optional parameter: The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
*/
- (void) createBulkUpdateNumbersAsyncWithPhoneNumber:(NSString*) phoneNumber
                voiceUrl:(NSString*) voiceUrl
                friendlyName:(NSString*) friendlyName
                voiceMethod:(NSString*) voiceMethod
                voiceFallbackUrl:(NSString*) voiceFallbackUrl
                voiceFallbackMethod:(NSString*) voiceFallbackMethod
                hangupCallback:(NSString*) hangupCallback
                hangupCallbackMethod:(NSString*) hangupCallbackMethod
                heartbeatUrl:(NSString*) heartbeatUrl
                heartbeatMethod:(NSString*) heartbeatMethod
                smsUrl:(NSString*) smsUrl
                smsMethod:(NSString*) smsMethod
                smsFallbackUrl:(NSString*) smsFallbackUrl
                smsFallbackMethod:(NSString*) smsFallbackMethod
                completionBlock:(CompletedPostBulkUpdateNumbers) onCompleted;

/**
* Completion block definition for asynchronous call to Bulk Buy Numbers */
typedef void (^CompletedPostBulkBuyNumbers)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Purchase a selected number of DID's from specific area codes to be used with your Ytel account.
* @param    numberType    Required parameter: The capability the number supports.
* @param    areaCode    Required parameter: Specifies the area code for the returned list of available numbers. Only available for North American numbers.
* @param    quantity    Required parameter: A positive integer that tells how many number you want to buy at a time.
* @param    leftover    Optional parameter: If desired quantity is unavailable purchase what is available .
*/
- (void) createBulkBuyNumbersAsyncWithNumberType:(enum NumberType15Enum) numberType
                areaCode:(NSString*) areaCode
                quantity:(NSString*) quantity
                leftover:(NSString*) leftover
                completionBlock:(CompletedPostBulkBuyNumbers) onCompleted;

@end