//
//  YtelAPIV3
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"

@interface AddressController : BaseController

/**
* Completion block definition for asynchronous call to Delete Address */
typedef void (^CompletedPostDeleteAddress)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* To delete Address to your address book
* @param    addressid    Required parameter: The identifier of the address to be deleted.
*/
- (void) createDeleteAddressAsyncWithAddressid:(NSString*) addressid
                completionBlock:(CompletedPostDeleteAddress) onCompleted;

/**
* Completion block definition for asynchronous call to Verify Address */
typedef void (^CompletedPostVerifyAddress)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Validates an address given.
* @param    addressid    Required parameter: The identifier of the address to be verified.
*/
- (void) createVerifyAddressAsyncWithAddressid:(NSString*) addressid
                completionBlock:(CompletedPostVerifyAddress) onCompleted;

/**
* Completion block definition for asynchronous call to View Address */
typedef void (^CompletedPostViewAddress)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* View Address Specific address Book by providing the address id
* @param    addressid    Required parameter: The identifier of the address to be retrieved.
*/
- (void) createViewAddressAsyncWithAddressid:(NSString*) addressid
                completionBlock:(CompletedPostViewAddress) onCompleted;

/**
* Completion block definition for asynchronous call to List Addresses */
typedef void (^CompletedPostListAddresses)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* List All Address 
* @param    page    Optional parameter: The page count to retrieve from the total results in the collection. Page indexing starts at 1.
* @param    pagesize    Optional parameter: How many results to return, default is 10, max is 100, must be an integer
* @param    addressid    Optional parameter: addresses Sid
* @param    dateCreated    Optional parameter: date created address.
*/
- (void) createListAddressesAsyncWithPage:(NSNumber*) page
                pagesize:(NSNumber*) pagesize
                addressid:(NSString*) addressid
                dateCreated:(NSString*) dateCreated
                completionBlock:(CompletedPostListAddresses) onCompleted;

/**
* Completion block definition for asynchronous call to Create Address */
typedef void (^CompletedPostCreateAddress)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* To add an address to your address book, you create a new address object. You can retrieve and delete individual addresses as well as get a list of addresses. Addresses are identified by a unique random ID.
* @param    name    Required parameter: Name of user
* @param    address    Required parameter: Address of user.
* @param    country    Required parameter: Must be a 2 letter country short-name code (ISO 3166)
* @param    state    Required parameter: Must be a 2 letter State eg. CA for US. For Some Countries it can be greater than 2 letters.
* @param    city    Required parameter: City Name.
* @param    zip    Required parameter: Zip code of city.
* @param    description    Optional parameter: Description of addresses.
* @param    email    Optional parameter: Email Id of user.
* @param    phone    Optional parameter: Phone number of user.
*/
- (void) createAddressAsyncWithName:(NSString*) name
                address:(NSString*) address
                country:(NSString*) country
                state:(NSString*) state
                city:(NSString*) city
                zip:(NSString*) zip
                description:(NSString*) description
                email:(NSString*) email
                phone:(NSString*) phone
                completionBlock:(CompletedPostCreateAddress) onCompleted;

@end