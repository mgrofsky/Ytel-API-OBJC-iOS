//
//  PostCardController.h
//  YtelAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "PostcardListpostcardInput.h"
#import "PostcardCreatepostcardInput.h"

@interface PostCardController : BaseController

/**
* Completion block definition for asynchronous call to PostcardDeletepostcard */
typedef void (^CompletedPostcardDeletepostcard)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Remove a postcard object.
* @param    postcardid    Required parameter: The unique identifier of a postcard object.
*/
- (void) postcardDeletepostcardAsyncWithPostcardid:(NSString*) postcardid
                completionBlock:(CompletedPostcardDeletepostcard) onCompleted;

/**
* Completion block definition for asynchronous call to PostcardViewpostcard */
typedef void (^CompletedPostcardViewpostcard)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve a postcard object by its PostcardId.
* @param    postcardid    Required parameter: The unique identifier for a postcard object.
*/
- (void) postcardViewpostcardAsyncWithPostcardid:(NSString*) postcardid
                completionBlock:(CompletedPostcardViewpostcard) onCompleted;

/**
* Completion block definition for asynchronous call to PostcardListpostcard */
typedef void (^CompletedPostcardListpostcard)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve a list of postcard objects. The postcards objects are sorted by creation date, with the most recently created postcards appearing first.
* @param  PostcardListpostcardInput     Object with all parameters
*/
- (void) postcardListpostcardAsyncWithPostcardListpostcardInput:(PostcardListpostcardInput*) input
                completionBlock:(CompletedPostcardListpostcard) onCompleted;

/**
* Completion block definition for asynchronous call to PostcardCreatepostcard */
typedef void (^CompletedPostcardCreatepostcard)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Create, print, and mail a postcard to an address. The postcard front must be supplied as a PDF, image, or an HTML string. The back can be a PDF, image, HTML string, or it can be automatically generated by supplying a custom message.
* @param  PostcardCreatepostcardInput     Object with all parameters
*/
- (void) postcardCreatepostcardAsyncWithPostcardCreatepostcardInput:(PostcardCreatepostcardInput*) input
                completionBlock:(CompletedPostcardCreatepostcard) onCompleted;

@end