//
//  ShortCodeController.h
//  YtelAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "CreateDedicatedshortcodeListshortcodeInput.h"
#import "CreateDedicatedshortcodeUpdateshortcodeInput.h"
#import "CreateDedicatedshortcodeGetinboundsmsInput.h"
#import "CreateDedicatedshortcodeSendsmsInput.h"
#import "CreateShortcodeListsmsInput.h"

@interface ShortCodeController : BaseController

/**
* Completion block definition for asynchronous call to DedicatedshortcodeListshortcode */
typedef void (^CompletedPostDedicatedshortcodeListshortcode)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve a list of Short Code assignment associated with your Ytel account.
* @param  CreateDedicatedshortcodeListshortcodeInput     Object with all parameters
*/
- (void) createDedicatedshortcodeListshortcodeAsyncWithCreateDedicatedshortcodeListshortcodeInput:(CreateDedicatedshortcodeListshortcodeInput*) input
                completionBlock:(CompletedPostDedicatedshortcodeListshortcode) onCompleted;

/**
* Completion block definition for asynchronous call to DedicatedshortcodeUpdateshortcode */
typedef void (^CompletedPostDedicatedshortcodeUpdateshortcode)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Update a dedicated shortcode.
* @param  CreateDedicatedshortcodeUpdateshortcodeInput     Object with all parameters
*/
- (void) createDedicatedshortcodeUpdateshortcodeAsyncWithCreateDedicatedshortcodeUpdateshortcodeInput:(CreateDedicatedshortcodeUpdateshortcodeInput*) input
                completionBlock:(CompletedPostDedicatedshortcodeUpdateshortcode) onCompleted;

/**
* Completion block definition for asynchronous call to DedicatedshortcodeViewshortcode */
typedef void (^CompletedPostDedicatedshortcodeViewshortcode)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve a single Short Code object by its shortcode assignment.
* @param    shortcode    Required parameter: List of valid Dedicated Short Code to your Ytel account
*/
- (void) createDedicatedshortcodeViewshortcodeAsyncWithShortcode:(NSString*) shortcode
                completionBlock:(CompletedPostDedicatedshortcodeViewshortcode) onCompleted;

/**
* Completion block definition for asynchronous call to ShortcodeViewsms */
typedef void (^CompletedPostShortcodeViewsms)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* View a single Sms Short Code message.
* @param    messageSid    Required parameter: The unique identifier for the sms resource
*/
- (void) createShortcodeViewsmsAsyncWithMessageSid:(NSString*) messageSid
                completionBlock:(CompletedPostShortcodeViewsms) onCompleted;

/**
* Completion block definition for asynchronous call to DedicatedshortcodeGetinboundsms */
typedef void (^CompletedPostDedicatedshortcodeGetinboundsms)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrive a list of inbound Sms Short Code messages associated with your Ytel account.
* @param  CreateDedicatedshortcodeGetinboundsmsInput     Object with all parameters
*/
- (void) createDedicatedshortcodeGetinboundsmsAsyncWithCreateDedicatedshortcodeGetinboundsmsInput:(CreateDedicatedshortcodeGetinboundsmsInput*) input
                completionBlock:(CompletedPostDedicatedshortcodeGetinboundsms) onCompleted;

/**
* Completion block definition for asynchronous call to DedicatedshortcodeSendsms */
typedef void (^CompletedPostDedicatedshortcodeSendsms)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Send Dedicated Shortcode
* @param  CreateDedicatedshortcodeSendsmsInput     Object with all parameters
*/
- (void) createDedicatedshortcodeSendsmsAsyncWithCreateDedicatedshortcodeSendsmsInput:(CreateDedicatedshortcodeSendsmsInput*) input
                completionBlock:(CompletedPostDedicatedshortcodeSendsms) onCompleted;

/**
* Completion block definition for asynchronous call to ShortcodeListsms */
typedef void (^CompletedPostShortcodeListsms)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve a list of Short Code messages.
* @param  CreateShortcodeListsmsInput     Object with all parameters
*/
- (void) createShortcodeListsmsAsyncWithCreateShortcodeListsmsInput:(CreateShortcodeListsmsInput*) input
                completionBlock:(CompletedPostShortcodeListsms) onCompleted;

@end