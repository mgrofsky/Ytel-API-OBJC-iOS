//
//  RecordingController.h
//  YtelAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
//
#import <Foundation/Foundation.h>
#import "Configuration.h"
#import "APIHelper.h"
#import "APIError.h"
#import "BaseController.h"
#import "UnirestClient.h"
#import "HttpContext.h"
#import "CreateRecordingListrecordingInput.h"

@interface RecordingController : BaseController

/**
* Completion block definition for asynchronous call to RecordingDeleterecording */
typedef void (^CompletedPostRecordingDeleterecording)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Remove a recording from your Ytel account.
* @param    recordingsid    Required parameter: The unique identifier for a recording.
*/
- (void) createRecordingDeleterecordingAsyncWithRecordingsid:(NSString*) recordingsid
                completionBlock:(CompletedPostRecordingDeleterecording) onCompleted;

/**
* Completion block definition for asynchronous call to RecordingViewrecording */
typedef void (^CompletedPostRecordingViewrecording)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve the recording of a call by its RecordingSid. This resource will return information regarding the call such as start time, end time, duration, and so forth.
* @param    recordingsid    Required parameter: The unique identifier for the recording.
*/
- (void) createRecordingViewrecordingAsyncWithRecordingsid:(NSString*) recordingsid
                completionBlock:(CompletedPostRecordingViewrecording) onCompleted;

/**
* Completion block definition for asynchronous call to RecordingListrecording */
typedef void (^CompletedPostRecordingListrecording)(BOOL success, HttpContext* context, NSString* response, NSError* error);

/**
* Retrieve a list of recording objects.
* @param  CreateRecordingListrecordingInput     Object with all parameters
*/
- (void) createRecordingListrecordingAsyncWithCreateRecordingListrecordingInput:(CreateRecordingListrecordingInput*) input
                completionBlock:(CompletedPostRecordingListrecording) onCompleted;

@end